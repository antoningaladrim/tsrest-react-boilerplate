services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    ports:
      - 5432:5432
    volumes:
      - ./infra/db:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -P $$POSTGRES_PASSWORD']
      interval: 10s
      timeout: 5s
      retries: 5

  db-test:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    ports:
      - 5433:5432
    volumes:
      - ./infra/db:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -P $$POSTGRES_PASSWORD']
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    hostname: minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server --console-address ":9001" /data
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://${MINIO_ENDPOINT}:${MINIO_PORT}/minio/health/live']
      interval: 10s
      timeout: 5s
      retries: 5

  createtestbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME};
      /usr/bin/mc anonymous set public myminio/${S3_BUCKET_NAME};
      /usr/bin/mc mb myminio/${S3_TEST_BUCKET_NAME};
      /usr/bin/mc anonymous set public myminio/${S3_TEST_BUCKET_NAME};
      exit 0;
      "
